<?php

namespace frontend\controllers;

use common\models\Appeal;
use common\models\AppealQuestionGroup;
use common\models\AppealRegister;
use common\models\Company;
use common\models\search\ReportSearch;
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;
use yii\filters\AccessControl;
use yii\web\Controller;
use yii\filters\VerbFilter;
use Yii;

class ReportController extends Controller
{
    public function beforeAction($action)
    {
        if(Yii::$app->user->isGuest){
            header('Location: '.Yii::$app->urlManager->createUrl(['/site/login']));
            exit;
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }
    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['@'],

                    ],

                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['post'],
                ],
            ],
        ];
    }

    public function actionIndex(){

        $searchModel = new ReportSearch();
        $dataProvider = $searchModel->searchLeader(Yii::$app->request->queryParams);


        return $this->render('index',[
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    public function actionIndex2(){
        $user = \Yii::$app->user->identity;
        $quest = AppealQuestionGroup::find()->all();
        $cc=Appeal::find()->Where(['company_id'=>$user->company_id])->all();
        $arr=AppealRegister::find()->Where(['company_id'=>$user->company_id])->all();
        if(Yii::$app->request->isPost){

            $spreadsheet = new Spreadsheet();
            $sheet = $spreadsheet->getActiveSheet();
            $n = 0;
            $m = 2;
            $time = new \DateTime('now');

            $sheet->setCellValue('A1', '№');
            $sheet->setCellValue('B1', 'Мурожаатларда кўтарилан масалалар	');
            $sheet->setCellValue('C1', 'Жами мурожаатлар сони	');
            $sheet->setCellValue('D1', 'Мурожаатларни шакллари	');
            $sheet->setCellValue('N1', '2023 йил бўйича мурожаатларни  кўриб чиқиш ҳолатлари');
            $sheet->setCellValue('D2', 'Ёзма');
            $sheet->setCellValue('E2', 'Хат');
            $sheet->setCellValue('F2', 'Оғзаки (Қабул)	');
            $sheet->setCellValue('G2', 'Электрон');
            $sheet->setCellValue('H2', 'Сайёр қабул');
            $sheet->setCellValue('I2', 'Ишонч телефони	');
            $sheet->setCellValue('J2', 'МФЙ орқали	');
            $sheet->setCellValue('K2', 'Веб сайт');
            $sheet->setCellValue('L2', 'Президент портали');
            $sheet->setCellValue('M2', 'Прокуратура');
            $sheet->setCellValue('N2', 'Назоратга олинганлар');
            $sheet->setCellValue('O2', 'чоралар  кўрилди');
            $sheet->setCellValue('P2', 'тушунтирилди');
            $sheet->setCellValue('Q2', 'рад этилди	');
            $sheet->setCellValue('R2', 'кўриб чиқилмоқда');
            $sheet->setCellValue('S2', 'такрорийлар');
            foreach ($quest as $item) {

                $n++;
                $m++;
                $aa=0;
                $at=0;
                $ax=0;
                $ao=0;
                $ae=0;
                $as=0;
                $ai=0;
                $am=0;
                $av=0;
                $apr=0;
                $ap=0;
                $ab=0;
                $ach=0;
                $ar=0;
                $ak=0;
                $ata=0;
                $ama=0;
                $sheet->setCellValue('A'.$m, $n);
                $sheet->setCellValue('B'.$m, $item->name);
                foreach ($cc as $a)
                {  if ( $a->question_id !== NULL)
                { if ($a->question->group->id == $item->id)
                {$aa=$aa+1;
                    if ($a->appeal_shakl_id==1){$at=$at+1;}
                    if ($a->appeal_shakl_id==2){$ax=$ax+1;}
                    if ($a->appeal_shakl_id==3){$ao=$ao+1;}
                    if ($a->appeal_shakl_id==4){$ae=$ae+1;}
                    if ($a->appeal_shakl_id==5){$as=$as+1;}
                    if ($a->appeal_shakl_id==6){$ai=$ai+1;}
                    if ($a->appeal_shakl_id==7){$am=$am+1;}
                    if ($a->appeal_shakl_id==8){$av=$av+1;}
                    if ($a->appeal_shakl_id==9){$apr=$apr+1;}
                    if ($a->appeal_shakl_id==10){$ap=$ap+1;}
                    if ($a->status>=2 && $a->status<=4){$ab=$ab+1;}
                    if ($a->status==4){$ach=$ach+1;}
                    if ($a->status==5){$ar=$ar+1;}
                    if ($a->status==2 || $a->status==3){$ak=$ak+1;}
                    foreach ($arr as $i){
                        if ( $i->appeal_id==$a->id ){
                            if ($i->takroriy==1){
                                $ata=$ata+1;}
                            if ($i->deadtime>=$time->format('Y-m-d')){
                                $ama=$ama+1;
                            }
                        }
                    }
                }}
                }
                $sheet->setCellValue('C'.$m, $aa);
                $sheet->setCellValue('D'.$m, $at);
                $sheet->setCellValue('E'.$m, $ax);
                $sheet->setCellValue('F'.$m, $ao);
                $sheet->setCellValue('G'.$m, $ae);
                $sheet->setCellValue('H'.$m, $as);
                $sheet->setCellValue('I'.$m, $ai);
                $sheet->setCellValue('J'.$m, $am);
                $sheet->setCellValue('K'.$m, $av);
                $sheet->setCellValue('L'.$m, $ap);
                $sheet->setCellValue('M'.$m, $apr);
                $sheet->setCellValue('N'.$m, $ab);
                $sheet->setCellValue('O'.$m, $ach);
                $sheet->setCellValue('P'.$m, $ar);
                $sheet->setCellValue('Q'.$m, $ak);
                $sheet->setCellValue('R'.$m, $ata);
                $sheet->setCellValue('S'.$m, $ama);
            }
            $spreadsheet->getActiveSheet()->getStyle("A1:S".$m)->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);
            $spreadsheet->getActiveSheet()->getStyle("A1:AN".$m)->getAlignment()->setHorizontal('center');
            $spreadsheet->getActiveSheet()->getStyle("A1:AN".$m)->getAlignment()->setVertical('center');
            $spreadsheet->getActiveSheet()->getStyle("A1:AN".$m)->getAlignment()->setWrapText(true);
            $sheet->mergeCells('A1:A2');
            $sheet->mergeCells('B1:B2');
            $sheet->mergeCells('C1:C2');
            $sheet->mergeCells('D1:M1');
            $sheet->mergeCells('N1:S1');
            $writer = new Xlsx($spreadsheet);
//            $writer->save("php://output");

            $writer->save('tashkilotlar.xlsx');
            Yii::$app->response->sendFile('tashkilotlar.xlsx');
        }

        return $this->render('index2',[
            'quest'=>$quest,
            'cc'=>$cc,
            'arr'=>$arr
        ]);
    }
    public function actionIndex3(){
        $user = \Yii::$app->user->identity;
        $time = new \DateTime('now');
        $quest = Company::find()
            ->select(['company.*',
                '(select count(appeal_register.id) from appeal_register where appeal_register.company_id = company.id) as jami',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal.appeal_shakl_id = 1) as shakl1',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal.appeal_shakl_id = 2) as shakl2',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal.appeal_shakl_id = 3) as shakl3',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal.appeal_shakl_id = 4) as shakl4',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal.appeal_shakl_id = 5) as shakl5',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal.appeal_shakl_id = 6) as shakl6',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal.appeal_shakl_id = 7) as shakl7',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal.appeal_shakl_id = 8) as shakl8',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal.appeal_shakl_id = 9) as shakl9',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal.appeal_shakl_id = 10) as shakl10',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal_register.status > 1) as nazoratda',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal_register.control_id=3 ) as chora',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal_register.control_id=4 ) as tushin',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal_register.control_id=5 ) as rad',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal_register.control_id=1 ) as kor',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal_register.takroriy=1 ) as tak',
                '(select count(appeal_register.id) from appeal_register inner join appeal on appeal_register.appeal_id = appeal.id where appeal_register.company_id = company.id and appeal_register.deadtime < '.$time->format('Y-m-d').' ) as date',
                ])
            ->where(['parent_id'=>$user->company_id])
            ->all();
        $cc=Appeal::find()->all();
        $arr=AppealRegister::find()->all();

        return $this->render('index3',[
            'quest'=>$quest,
            'cc'=>$cc,
            'arr'=>$arr
        ]);
    }

}
